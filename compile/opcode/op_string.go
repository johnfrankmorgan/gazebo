// Code generated by "stringer -type=Op -output=compile/opcode/op_string.go compile/opcode/op.go"; DO NOT EDIT.

package opcode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Jump-1]
	_ = x[JumpIfTrue-2]
	_ = x[LoadLiteral-3]
	_ = x[LoadName-4]
	_ = x[StoreName-5]
	_ = x[MakeList-6]
	_ = x[MakeMap-7]
	_ = x[MakeTuple-8]
	_ = x[_HasArgumentEnd-9]
	_ = x[GetIndex-10]
	_ = x[SetIndex-11]
	_ = x[LoadNil-12]
	_ = x[LoadFalse-13]
	_ = x[LoadTrue-14]
	_ = x[Return-15]
	_ = x[UnaryNot-16]
	_ = x[UnaryPlus-17]
	_ = x[UnaryMinus-18]
	_ = x[BinaryAnd-19]
	_ = x[BinaryOr-20]
	_ = x[BinaryIs-21]
	_ = x[BinaryEqual-22]
	_ = x[BinaryNotEqual-23]
	_ = x[BinaryLessThan-24]
	_ = x[BinaryLessThanOrEqual-25]
	_ = x[BinaryGreaterThan-26]
	_ = x[BinaryGreaterThanOrEqual-27]
	_ = x[BinaryIn-28]
	_ = x[BinaryAdd-29]
	_ = x[BinarySubtract-30]
	_ = x[BinaryMultiply-31]
	_ = x[BinaryDivide-32]
	_ = x[BinaryModulo-33]
	_ = x[BinaryBitwiseAnd-34]
	_ = x[BinaryBitwiseOr-35]
	_ = x[BinaryBitwiseXor-36]
	_ = x[BinaryShiftLeft-37]
	_ = x[BinaryShiftRight-38]
}

const _Op_name = "JumpJumpIfTrueLoadLiteralLoadNameStoreNameMakeListMakeMapMakeTuple_HasArgumentEndGetIndexSetIndexLoadNilLoadFalseLoadTrueReturnUnaryNotUnaryPlusUnaryMinusBinaryAndBinaryOrBinaryIsBinaryEqualBinaryNotEqualBinaryLessThanBinaryLessThanOrEqualBinaryGreaterThanBinaryGreaterThanOrEqualBinaryInBinaryAddBinarySubtractBinaryMultiplyBinaryDivideBinaryModuloBinaryBitwiseAndBinaryBitwiseOrBinaryBitwiseXorBinaryShiftLeftBinaryShiftRight"

var _Op_index = [...]uint16{0, 4, 14, 25, 33, 42, 50, 57, 66, 81, 89, 97, 104, 113, 121, 127, 135, 144, 154, 163, 171, 179, 190, 204, 218, 239, 256, 280, 288, 297, 311, 325, 337, 349, 365, 380, 396, 411, 427}

func (i Op) String() string {
	i -= 1
	if i < 0 || i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
